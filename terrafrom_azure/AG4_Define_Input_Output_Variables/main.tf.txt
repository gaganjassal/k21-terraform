terraform {
 required_providers {
 azurerm = {
 source = "hashicorp/azurerm"
 version = "3.53.0"
 }
 }
}
provider "azurerm" {
 # Configuration options
}
#create resource group
resource "azurerm_resource_group" "TFAzure-rg" {
 name = "tfAzure-rg"
 location = var.location
 tags = {
 Environment = "Dev"
 }
}

#Create virtual network
resource "azurerm_virtual_network" "TFAzure-vnet" {
 name = "vnet-dev-${var.location}-001"
 address_space = var.vnet_address_space
 location = azurerm_resource_group.TFAzurerg.location
 resource_group_name = azurerm_resource_group.TFAzurerg.name
}
# Create subnet
resource "azurerm_subnet" "subnet" {
 name = "subnet-dev-${var.location}-001 "
 resource_group_name = azurerm_resource_group.TFAzure-rg.name
 virtual_network_name = azurerm_virtual_network.TFAzurevnet.name
 address_prefixes = ["10.0.0.0/24"]
}
# Create public IP
resource "azurerm_public_ip" "publicip" {
 name = "publicIP"
 location = azurerm_resource_group.TFAzurerg.location
 resource_group_name = azurerm_resource_group.TFAzure-rg.name
 allocation_method = "Static"
}

# Create network security group and rule
resource "azurerm_network_security_group" "nsg" {
 name = "nsg-001 "
 location = azurerm_resource_group.TFAzurerg.location
 resource_group_name = azurerm_resource_group.TFAzure-rg.name
 security_rule {
 name = "SSH"
 priority = 1001
 direction = "Inbound"
 access = "Allow"
 protocol = "Tcp"
 source_port_range = "*"
 destination_port_range = "22"
 source_address_prefixes = "*"
 destination_address_prefix = "*"
 }
}
# Create network interface
resource "azurerm_network_interface" "nic" {
 name = "nic-dev"
 location = azurerm_resource_group.TFAzurerg.location
 resource_group_name = azurerm_resource_group.TFAzurerg.name
 network_security_group_id =
azurerm_network_security_group.nsg.id
 ip_configuration {
 name = "nic-cfg"
 subnet_id = azurerm_subnet.subnet.id
 private_ip_address_allocation = "dynamic"
 public_ip_address_id =
azurerm_public_ip.publicip.id
 }
}
# Create virtual machine
resource "azurerm_virtual_machine" "vm" {
 name = "TFAzure-vm"
 location = azurerm_resource_group.TFAzurerg.location
 resource_group_name = azurerm_resource_group.TFAzurerg.name
 network_interface_ids = [azurerm_network_interface.nic.id]
 vm_size = "Standard_B1s"
 storage_os_disk {
 name = "disk1"
 caching = "ReadWrite"
 create_option = "FromImage"
 managed_disk_type = lookup(var.managed_disk_type,
var.location, "Standard_LRS")
 }

 storage_image_reference {
 publisher = var.os.publisher
 offer = var.os.offer
 sku = var.os.sku
 version = var.os.version
 }
 os_profile {
 computer_name = "tfAzuredev01"
 admin_username = var.admin_username
 admin_password = var.admin_password
 }
 os_profile_linux_config {
 disable_password_authentication = false
 }
}
